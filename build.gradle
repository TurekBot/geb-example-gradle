plugins {
    id "idea"
    id "groovy"
    id "com.github.erdi.webdriver-binaries" version "2.7"
    id "com.github.erdi.idea-base" version "2.2"
}

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "chromeHeadless"]

    gebVersion = '+'
    seleniumVersion = '4.2.2'
    chromeDriverVersion = '79.0.3945.36'
    geckoDriverVersion = '0.31.0'
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    mavenCentral()
}

dependencies {
    // If using Spock, need to depend on geb-spock
    testImplementation "org.gebish:geb-spock:$gebVersion"

    // If using JUnit 5, need to depend on geb-junit5
    testImplementation "org.gebish:geb-junit5:$gebVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Drivers
    testImplementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testImplementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
}

webdriverBinaries {
    chromedriver {
        version = chromeDriverVersion
        fallbackTo32Bit = true
    }
    geckodriver geckoDriverVersion
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        useJUnitPlatform()

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}
